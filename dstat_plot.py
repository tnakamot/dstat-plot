#!/usr/bin/env python3

import argparse
from datetime import datetime
import sys

import matplotlib.pyplot as plt
import pandas as pd

def parse_argments():
    description = '''
Generate time series plots from the dstat output file.
This tool assumes that the file is generated by 0.8.0 and the data includes 'time' or 'epoch' as the timestamp.
'''
    parser = argparse.ArgumentParser(
        description = description,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--output-dir',
                        dest    = 'output_dir',
                        metavar = 'DIR',
                        default = 'output',
                        help    = 'Time series plots will be generated under this directory.')
    parser.add_argument('dstat_file',
                        metavar = 'INPUT',
                        help    = 'File generated by dstat --output option..')
    
    return parser.parse_args()

def main():
    args = parse_argments()

    data_frame = pd.read_csv(
        args.dstat_file,
        header = 5,
        parse_dates = [
            'time',
        ],
    )

    if 'epoch' in data_frame.columns:
        t = [datetime.fromtimestamp(epoch) for epoch in data_frame['epoch']]
    elif 'time' in data_frame.columns:
        t = data_frame['time']
    else:
        t = np.arange(0, len(data_frame))

    print(t)

    for column in data_frame.columns:
        if column == 'time' or column == 'epoch':
            continue

        print(column)
    
if __name__ == "__main__":
    main()
